I2luY2x1ZGUgPHN0ZGlvLmg+DQojaW5jbHVkZSA8c3RyaW5nLmg+DQojaW5jbHVkZSA8c3RkbGliLmg+DQoNCnR5cGVkZWYgdW5zaWduZWQJCSAgIGNoYXIgdWludDhfdDsNCnR5cGVkZWYgdW5zaWduZWQgc2hvcnQgICAgIGludCB1aW50MTZfdDsNCnR5cGVkZWYgdW5zaWduZWQgICAgICAgICAgIGludCB1aW50MzJfdDsNCg0KI2RlZmluZSBCQVNFNjRfRU5DT0RFX09VVF9TSVpFKHMpICgodW5zaWduZWQgaW50KSgoKChzKSArIDIpIC8gMykgKiA0ICsgMSkpDQojZGVmaW5lIEJBU0U2NF9QQUQgJz0nDQojZGVmaW5lIEJBU0U2NERFX0ZJUlNUICcrJw0KI2RlZmluZSBCQVNFNjRERV9MQVNUICd6Jw0KDQpzdGF0aWMgY29uc3QgY2hhciBiYXNlNjRlbltdOw0KdW5zaWduZWQgaW50IGJhc2U2NF9lbmNvZGUoY29uc3QgdW5zaWduZWQgY2hhciAqaW4sIHVuc2lnbmVkIGludCBpbmxlbiwgY2hhciAqb3V0KTsNCnVuc2lnbmVkIGludCBnZXRGaWxlU2l6ZShjb25zdCBjaGFyKiBmaWxlcGF0aCk7DQp2b2lkIGdldEZpbGVOYW1lKGNoYXIqIHBhdGgsIGludCBjaG9pY2UsIGNoYXIqIHB1cmVfZmlsZV9uYW1lLCBjaGFyKiBmaWxlX25hbWUsIGNoYXIqIGV4dGVuc2lvbl9uYW1lICk7DQoNCg0KaW50IG1haW4oIHZvaWQgKSB7DQoJRklMRSAqb3JpZ2luRmlsZSA9IE5VTEw7DQoJRklMRSAqdGFyZ2V0RmlsZSA9IE5VTEw7DQoJdWludDMyX3QgbGVuLCBiNjRMZW47DQoJaW50IGkgPSAwOw0KICAgIGNoYXIgKmJ1ZiwgKmI2NEJ1ZjsNCgljaGFyIHBhdGhbMzAwXTsNCiAgICBjaGFyIHRhcmdldFBhdGhbMzAwXTsNCgljaGFyIHB1cmVfZmlsZV9uYW1lWzEwMF0sZmlsZV9uYW1lWzEwMF0sZXh0ZW5zaW9uX25hbWVbMTAwXTsNCiAgICBtZW1zZXQocHVyZV9maWxlX25hbWUsIDAsIDEwMCk7DQogICAgbWVtc2V0KGZpbGVfbmFtZSwgMCwgMTAwKTsNCiAgICBtZW1zZXQoZXh0ZW5zaW9uX25hbWUsIDAsIDEwMCk7DQoNCglwcmludGYoImRyYWcuLi5cclxuIik7DQoJc2NhbmYoIiVzIixwYXRoKTsNCg0KCWxlbiA9IGdldEZpbGVTaXplKHBhdGgpOw0KICAgIHByaW50ZigibGVuOiVkXHJcbiIsIGxlbik7DQogICAgc3ByaW50ZiggdGFyZ2V0UGF0aCwgIiVzLmJhc2U2NC50eHQiLCBwYXRoICk7DQogICAgcHJpbnRmKCJ0YXJnZXRQYXRoOiAlc1xyXG4iLCB0YXJnZXRQYXRoKTsNCglvcmlnaW5GaWxlID0gZm9wZW4ocGF0aCwgInJiIik7DQoJdGFyZ2V0RmlsZSA9IGZvcGVuKHRhcmdldFBhdGgsICJ3YiIpOw0KICAgIGJ1ZiA9IG1hbGxvYyhsZW4pOw0KDQogICAgZm9yICggaW50IGk9MDsgaTxsZW47IGkrKyApIHsNCiAgICAgICAgc3ByaW50ZigmYnVmW2ldLCAiJWMiLCBmZ2V0YyhvcmlnaW5GaWxlKSk7DQogICAgfQ0KICAgIA0KICAgIGI2NExlbiA9IEJBU0U2NF9FTkNPREVfT1VUX1NJWkUobGVuKTsNCiAgICBiNjRCdWYgPSAoY2hhciopbWFsbG9jKGI2NExlbik7DQogICAgYmFzZTY0X2VuY29kZShidWYsIGxlbiwgYjY0QnVmKTsNCg0KICAgIGZ3cml0ZSggYjY0QnVmLCAxLCBsZW4sIHRhcmdldEZpbGUgKTsNCg0KCWZjbG9zZShvcmlnaW5GaWxlKTsNCglmY2xvc2UodGFyZ2V0RmlsZSk7DQoNCn0NCg0KDQoNCi8qIEJBU0UgNjQgZW5jb2RlIHRhYmxlICovDQpzdGF0aWMgY29uc3QgY2hhciBiYXNlNjRlbltdID0gew0KCSdBJywgJ0InLCAnQycsICdEJywgJ0UnLCAnRicsICdHJywgJ0gnLA0KCSdJJywgJ0onLCAnSycsICdMJywgJ00nLCAnTicsICdPJywgJ1AnLA0KCSdRJywgJ1InLCAnUycsICdUJywgJ1UnLCAnVicsICdXJywgJ1gnLA0KCSdZJywgJ1onLCAnYScsICdiJywgJ2MnLCAnZCcsICdlJywgJ2YnLA0KCSdnJywgJ2gnLCAnaScsICdqJywgJ2snLCAnbCcsICdtJywgJ24nLA0KCSdvJywgJ3AnLCAncScsICdyJywgJ3MnLCAndCcsICd1JywgJ3YnLA0KCSd3JywgJ3gnLCAneScsICd6JywgJzAnLCAnMScsICcyJywgJzMnLA0KCSc0JywgJzUnLCAnNicsICc3JywgJzgnLCAnOScsICcrJywgJy8nLA0KfTsNCnVuc2lnbmVkIGludCBiYXNlNjRfZW5jb2RlKGNvbnN0IHVuc2lnbmVkIGNoYXIgKmluLCB1bnNpZ25lZCBpbnQgaW5sZW4sIGNoYXIgKm91dCkgew0KCWludCBzOw0KCXVuc2lnbmVkIGludCBpOw0KCXVuc2lnbmVkIGludCBqOw0KCXVuc2lnbmVkIGNoYXIgYzsNCgl1bnNpZ25lZCBjaGFyIGw7DQoNCglzID0gMDsNCglsID0gMDsNCglmb3IgKGkgPSBqID0gMDsgaSA8IGlubGVuOyBpKyspIHsNCgkJYyA9IGluW2ldOw0KDQoJCXN3aXRjaCAocykgew0KCQljYXNlIDA6DQoJCQlzID0gMTsNCgkJCW91dFtqKytdID0gYmFzZTY0ZW5bKGMgPj4gMikgJiAweDNGXTsNCgkJCWJyZWFrOw0KCQljYXNlIDE6DQoJCQlzID0gMjsNCgkJCW91dFtqKytdID0gYmFzZTY0ZW5bKChsICYgMHgzKSA8PCA0KSB8ICgoYyA+PiA0KSAmIDB4RildOw0KCQkJYnJlYWs7DQoJCWNhc2UgMjoNCgkJCXMgPSAwOw0KCQkJb3V0W2orK10gPSBiYXNlNjRlblsoKGwgJiAweEYpIDw8IDIpIHwgKChjID4+IDYpICYgMHgzKV07DQoJCQlvdXRbaisrXSA9IGJhc2U2NGVuW2MgJiAweDNGXTsNCgkJCWJyZWFrOw0KCQl9DQoJCWwgPSBjOw0KCX0NCg0KCXN3aXRjaCAocykgew0KCWNhc2UgMToNCgkJb3V0W2orK10gPSBiYXNlNjRlblsobCAmIDB4MykgPDwgNF07DQoJCW91dFtqKytdID0gQkFTRTY0X1BBRDsNCgkJb3V0W2orK10gPSBCQVNFNjRfUEFEOw0KCQlicmVhazsNCgljYXNlIDI6DQoJCW91dFtqKytdID0gYmFzZTY0ZW5bKGwgJiAweEYpIDw8IDJdOw0KCQlvdXRbaisrXSA9IEJBU0U2NF9QQUQ7DQoJCWJyZWFrOw0KCX0NCg0KCW91dFtqXSA9IDA7DQoNCglyZXR1cm4gajsNCn0NCnVuc2lnbmVkIGludCBnZXRGaWxlU2l6ZShjb25zdCBjaGFyKiBmaWxlcGF0aCkgew0KICAgIHN0YXRpYyB1bnNpZ25lZCBpbnQgZmlsZV9zaXplID0gMDsNCg0KICAgIEZJTEUqIGZwX3IgPSBmb3BlbihmaWxlcGF0aCwgInIiKTsNCiAgICBpZihOVUxMID09IGZwX3IpDQogICAgew0KICAgICAgICBwcmludGYoImVycm9yIDpmYWlsIHRvIG9wZW4gJXNcbiIsIGZpbGVwYXRoKTsNCiAgICAgICAgcmV0dXJuIGZpbGVfc2l6ZSA9IDA7DQogICAgfQ0KDQogICAgLy8gZ2V0IGZpbGUgc2l6ZSBieSBtb3ZlIHBvaW50ZXIsIHVuaXQgYnl0ZQ0KICAgIGZzZWVrKGZwX3IsIDAsIFNFRUtfU0VUKTsNCiAgICBmc2VlayhmcF9yLCAwLCBTRUVLX0VORCk7DQogICAgZmlsZV9zaXplID0gZnRlbGwoZnBfcik7DQogICAgZnNlZWsoZnBfciwgMCwgU0VFS19TRVQpOw0KDQogICAgZmNsb3NlKGZwX3IpOw0KDQogICAgcmV0dXJuIGZpbGVfc2l6ZTsNCn0NCnZvaWQgZ2V0RmlsZU5hbWUoY2hhciogcGF0aCwgaW50IGNob2ljZSwgY2hhciogcHVyZV9maWxlX25hbWUsIGNoYXIqIGZpbGVfbmFtZSwgY2hhciogZXh0ZW5zaW9uX25hbWUgKSB7DQoJLy/ljp/mlofpk77mjqXvvJpodHRwczovL2Jsb2cuY3Nkbi5uZXQvTG91aXNlX1RyZW5kZXIvYXJ0aWNsZS9kZXRhaWxzLzEyNDYzNjk3Mw0KICAgIGludCBpLGosZmxhZyA9IDA7DQogICAgaW50IGxlbiA9IHN0cmxlbihwYXRoKTsgLy/lj5blrZfnrKbkuLLplb/luqYNCiAgICAvL+iOt+WPluWQjue8gOWQjSAvLw0KICAgIGZvcihpPWxlbi0xOyBpPj0wOyBpLS0pDQogICAgICAgIGlmKHBhdGhbaV0gPT0gJy4nKXsgIC8v5om+5Yiw5pyA5ZCO5LiA5Liq54K55Y+3IA0KICAgICAgICAgICAgc3RyY3B5KGV4dGVuc2lvbl9uYW1lLCZwYXRoW2krMV0pOy8v6I635Y+W5ZCO57yA5ZCNIA0KICAgICAgICAgICAgYnJlYWs7DQogICAgICAgIH0gDQogICAgLy/ojrflj5bmlofku7blkI0o5LiN5ZCr6Lev5b6ELOWQq+WQjue8gCkgICAgICAgDQogICAgZm9yKGk9bGVuLTE7IGk+PTA7IGktLSkNCiAgICAgICAgaWYocGF0aFtpXSA9PSAnXFwnKXsgLy/mib7liLDmnIDlkI7kuIDkuKrmlpzmnaANCiAgICAgICAgICAgIHN0cmNweShmaWxlX25hbWUsJnBhdGhbaSsxXSk7Ly/ojrflj5bml